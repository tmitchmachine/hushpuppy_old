cat << EOF > docker-compose.yml
version: '3.8'
services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - timescale_data:/var/lib/postgresql/data

  bot:
    build: .
    depends_on:
      - redis
      - timescaledb
    environment:
      - NODE_ENV=production
    volumes:
      - ./config:/app/config
      - ./data:/app/data

volumes:
  timescale_data:
EOF

# 8. Create Trading Bot Configuration
cat << EOF > config.json
{
  "trading": {
    "max_open_trades": 1,
    "stake_amount": "unlimited",
    "tradable_balance_ratio": 0.99,
    "timeframe": "1m",
    "dry_run": false,
    "cancel_open_orders_on_exit": true,
    "use_exit_signal": true,
    "exit_profit_only": false,
    "exit_profit_offset": 0.0,
    "ignore_roi_if_entry_signal": true
  },
  "buy": {
    "quick_mode": {
      "enabled": true,
      "min_liquidity": 1000,
      "min_volume_sats": 500000,
      "min_price": 0.00000001,
      "max_price": 1,
      "volatility_threshold": 0.2
    }
  },
  "exit": {
    "trailing_stop": true,
    "trailing_stop_positive": 0.01,
    "trailing_stop_positive_offset": 0.02,
    "trailing_only_offset_is_reached": true
  }
}
EOF
